{"ast":null,"code":"class TinyQueue {\n  constructor(data = [], compare = defaultCompare) {\n    this.data = data;\n    this.length = this.data.length;\n    this.compare = compare;\n    if (this.length > 0) {\n      for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n    }\n  }\n  push(item) {\n    this.data.push(item);\n    this.length++;\n    this._up(this.length - 1);\n  }\n  pop() {\n    if (this.length === 0) return undefined;\n    const top = this.data[0];\n    const bottom = this.data.pop();\n    this.length--;\n    if (this.length > 0) {\n      this.data[0] = bottom;\n      this._down(0);\n    }\n    return top;\n  }\n  peek() {\n    return this.data[0];\n  }\n  _up(pos) {\n    const {\n      data,\n      compare\n    } = this;\n    const item = data[pos];\n    while (pos > 0) {\n      const parent = pos - 1 >> 1;\n      const current = data[parent];\n      if (compare(item, current) >= 0) break;\n      data[pos] = current;\n      pos = parent;\n    }\n    data[pos] = item;\n  }\n  _down(pos) {\n    const {\n      data,\n      compare\n    } = this;\n    const halfLength = this.length >> 1;\n    const item = data[pos];\n    while (pos < halfLength) {\n      let left = (pos << 1) + 1;\n      let best = data[left];\n      const right = left + 1;\n      if (right < this.length && compare(data[right], best) < 0) {\n        left = right;\n        best = data[right];\n      }\n      if (compare(best, item) >= 0) break;\n      data[pos] = best;\n      pos = left;\n    }\n    data[pos] = item;\n  }\n}\nfunction defaultCompare(a, b) {\n  return a < b ? -1 : a > b ? 1 : 0;\n}\nfunction checkWhichEventIsLeft(e1, e2) {\n  if (e1.p.x > e2.p.x) return 1;\n  if (e1.p.x < e2.p.x) return -1;\n  if (e1.p.y !== e2.p.y) return e1.p.y > e2.p.y ? 1 : -1;\n  return 1;\n}\nfunction checkWhichSegmentHasRightEndpointFirst(seg1, seg2) {\n  if (seg1.rightSweepEvent.p.x > seg2.rightSweepEvent.p.x) return 1;\n  if (seg1.rightSweepEvent.p.x < seg2.rightSweepEvent.p.x) return -1;\n  if (seg1.rightSweepEvent.p.y !== seg2.rightSweepEvent.p.y) return seg1.rightSweepEvent.p.y < seg2.rightSweepEvent.p.y ? 1 : -1;\n  return 1;\n}\nclass Event {\n  constructor(p, featureId, ringId, eventId) {\n    this.p = {\n      x: p[0],\n      y: p[1]\n    };\n    this.featureId = featureId;\n    this.ringId = ringId;\n    this.eventId = eventId;\n    this.otherEvent = null;\n    this.isLeftEndpoint = null;\n  }\n  isSamePoint(eventToCheck) {\n    return this.p.x === eventToCheck.p.x && this.p.y === eventToCheck.p.y;\n  }\n}\nfunction fillEventQueue(geojson, eventQueue) {\n  if (geojson.type === 'FeatureCollection') {\n    const features = geojson.features;\n    for (let i = 0; i < features.length; i++) {\n      processFeature(features[i], eventQueue);\n    }\n  } else {\n    processFeature(geojson, eventQueue);\n  }\n}\nlet featureId = 0;\nlet ringId = 0;\nlet eventId = 0;\nfunction processFeature(featureOrGeometry, eventQueue) {\n  const geom = featureOrGeometry.type === 'Feature' ? featureOrGeometry.geometry : featureOrGeometry;\n  let coords = geom.coordinates;\n  // standardise the input\n  if (geom.type === 'Polygon' || geom.type === 'MultiLineString') coords = [coords];\n  if (geom.type === 'LineString') coords = [[coords]];\n  for (let i = 0; i < coords.length; i++) {\n    for (let ii = 0; ii < coords[i].length; ii++) {\n      let currentP = coords[i][ii][0];\n      let nextP = null;\n      ringId = ringId + 1;\n      for (let iii = 0; iii < coords[i][ii].length - 1; iii++) {\n        nextP = coords[i][ii][iii + 1];\n        const e1 = new Event(currentP, featureId, ringId, eventId);\n        const e2 = new Event(nextP, featureId, ringId, eventId + 1);\n        e1.otherEvent = e2;\n        e2.otherEvent = e1;\n        if (checkWhichEventIsLeft(e1, e2) > 0) {\n          e2.isLeftEndpoint = true;\n          e1.isLeftEndpoint = false;\n        } else {\n          e1.isLeftEndpoint = true;\n          e2.isLeftEndpoint = false;\n        }\n        eventQueue.push(e1);\n        eventQueue.push(e2);\n        currentP = nextP;\n        eventId = eventId + 1;\n      }\n    }\n  }\n  featureId = featureId + 1;\n}\nclass Segment {\n  constructor(event) {\n    this.leftSweepEvent = event;\n    this.rightSweepEvent = event.otherEvent;\n  }\n}\nfunction testSegmentIntersect(seg1, seg2) {\n  if (seg1 === null || seg2 === null) return false;\n  if (seg1.leftSweepEvent.ringId === seg2.leftSweepEvent.ringId && (seg1.rightSweepEvent.isSamePoint(seg2.leftSweepEvent) || seg1.rightSweepEvent.isSamePoint(seg2.leftSweepEvent) || seg1.rightSweepEvent.isSamePoint(seg2.rightSweepEvent) || seg1.leftSweepEvent.isSamePoint(seg2.leftSweepEvent) || seg1.leftSweepEvent.isSamePoint(seg2.rightSweepEvent))) return false;\n  const x1 = seg1.leftSweepEvent.p.x;\n  const y1 = seg1.leftSweepEvent.p.y;\n  const x2 = seg1.rightSweepEvent.p.x;\n  const y2 = seg1.rightSweepEvent.p.y;\n  const x3 = seg2.leftSweepEvent.p.x;\n  const y3 = seg2.leftSweepEvent.p.y;\n  const x4 = seg2.rightSweepEvent.p.x;\n  const y4 = seg2.rightSweepEvent.p.y;\n  const denom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\n  const numeA = (x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3);\n  const numeB = (x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3);\n  if (denom === 0) {\n    if (numeA === 0 && numeB === 0) return false;\n    return false;\n  }\n  const uA = numeA / denom;\n  const uB = numeB / denom;\n  if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n    const x = x1 + uA * (x2 - x1);\n    const y = y1 + uA * (y2 - y1);\n    return [x, y];\n  }\n  return false;\n}\n\n// import {debugEventAndSegments, debugRemovingSegment} from './debug'\n\nfunction runCheck(eventQueue, ignoreSelfIntersections) {\n  ignoreSelfIntersections = ignoreSelfIntersections ? ignoreSelfIntersections : false;\n  const intersectionPoints = [];\n  const outQueue = new TinyQueue([], checkWhichSegmentHasRightEndpointFirst);\n  while (eventQueue.length) {\n    const event = eventQueue.pop();\n    if (event.isLeftEndpoint) {\n      // debugEventAndSegments(event.p, outQueue.data)\n      const segment = new Segment(event);\n      for (let i = 0; i < outQueue.data.length; i++) {\n        const otherSeg = outQueue.data[i];\n        if (ignoreSelfIntersections) {\n          if (otherSeg.leftSweepEvent.featureId === event.featureId) continue;\n        }\n        const intersection = testSegmentIntersect(segment, otherSeg);\n        if (intersection !== false) intersectionPoints.push(intersection);\n      }\n      outQueue.push(segment);\n    } else if (event.isLeftEndpoint === false) {\n      outQueue.pop();\n      // const seg = outQueue.pop()\n      // debugRemovingSegment(event.p, seg)\n    }\n  }\n  return intersectionPoints;\n}\nfunction sweeplineIntersections(geojson, ignoreSelfIntersections) {\n  const eventQueue = new TinyQueue([], checkWhichEventIsLeft);\n  fillEventQueue(geojson, eventQueue);\n  return runCheck(eventQueue, ignoreSelfIntersections);\n}\nexport default sweeplineIntersections;","map":{"version":3,"names":["TinyQueue","constructor","data","compare","defaultCompare","length","i","_down","push","item","_up","pop","undefined","top","bottom","peek","pos","parent","current","halfLength","left","best","right","a","b","checkWhichEventIsLeft","e1","e2","p","x","y","checkWhichSegmentHasRightEndpointFirst","seg1","seg2","rightSweepEvent","Event","featureId","ringId","eventId","otherEvent","isLeftEndpoint","isSamePoint","eventToCheck","fillEventQueue","geojson","eventQueue","type","features","processFeature","featureOrGeometry","geom","geometry","coords","coordinates","ii","currentP","nextP","iii","Segment","event","leftSweepEvent","testSegmentIntersect","x1","y1","x2","y2","x3","y3","x4","y4","denom","numeA","numeB","uA","uB","runCheck","ignoreSelfIntersections","intersectionPoints","outQueue","segment","otherSeg","intersection","sweeplineIntersections"],"sources":["/Users/yairtitelboim/Documents/Kernel/ALLAPPS/LOGhub/loghub/county-map-app/node_modules/sweepline-intersections/dist/sweeplineIntersections.esm.js"],"sourcesContent":["class TinyQueue {\n    constructor(data = [], compare = defaultCompare) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let left = (pos << 1) + 1;\n            let best = data[left];\n            const right = left + 1;\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nfunction checkWhichEventIsLeft (e1, e2) {\n    if (e1.p.x > e2.p.x) return 1\n    if (e1.p.x < e2.p.x) return -1\n\n    if (e1.p.y !== e2.p.y) return e1.p.y > e2.p.y ? 1 : -1\n    return 1\n}\n\nfunction checkWhichSegmentHasRightEndpointFirst (seg1, seg2) {\n    if (seg1.rightSweepEvent.p.x > seg2.rightSweepEvent.p.x) return 1\n    if (seg1.rightSweepEvent.p.x < seg2.rightSweepEvent.p.x) return -1\n\n    if (seg1.rightSweepEvent.p.y !== seg2.rightSweepEvent.p.y) return seg1.rightSweepEvent.p.y < seg2.rightSweepEvent.p.y ? 1 : -1\n    return 1\n}\n\nclass Event {\n\n    constructor (p, featureId, ringId, eventId) {\n        this.p = {\n            x: p[0],\n            y: p[1]\n        };\n        this.featureId = featureId;\n        this.ringId = ringId;\n        this.eventId = eventId;\n\n        this.otherEvent = null;\n        this.isLeftEndpoint = null;\n    }\n\n    isSamePoint (eventToCheck) {\n        return this.p.x === eventToCheck.p.x && this.p.y === eventToCheck.p.y\n    }\n}\n\nfunction fillEventQueue (geojson, eventQueue) {\n    if (geojson.type === 'FeatureCollection') {\n        const features = geojson.features;\n        for (let i = 0; i < features.length; i++) {\n            processFeature(features[i], eventQueue);\n        }\n    } else {\n        processFeature(geojson, eventQueue);\n    }\n}\n\nlet featureId = 0;\nlet ringId = 0;\nlet eventId = 0;\nfunction processFeature (featureOrGeometry, eventQueue) {\n    const geom = featureOrGeometry.type === 'Feature' ? featureOrGeometry.geometry : featureOrGeometry;\n    let coords = geom.coordinates;\n    // standardise the input\n    if (geom.type === 'Polygon' || geom.type === 'MultiLineString') coords = [coords];\n    if (geom.type === 'LineString') coords = [[coords]];\n\n    for (let i = 0; i < coords.length; i++) {\n        for (let ii = 0; ii < coords[i].length; ii++) {\n            let currentP = coords[i][ii][0];\n            let nextP = null;\n            ringId = ringId + 1;\n            for (let iii = 0; iii < coords[i][ii].length - 1; iii++) {\n                nextP = coords[i][ii][iii + 1];\n\n                const e1 = new Event(currentP, featureId, ringId, eventId);\n                const e2 = new Event(nextP, featureId, ringId, eventId + 1);\n\n                e1.otherEvent = e2;\n                e2.otherEvent = e1;\n\n                if (checkWhichEventIsLeft(e1, e2) > 0) {\n                    e2.isLeftEndpoint = true;\n                    e1.isLeftEndpoint = false;\n                } else {\n                    e1.isLeftEndpoint = true;\n                    e2.isLeftEndpoint = false;\n                }\n                eventQueue.push(e1);\n                eventQueue.push(e2);\n\n                currentP = nextP;\n                eventId = eventId + 1;\n            }\n        }\n    }\n    featureId = featureId + 1;\n}\n\nclass Segment {\n\n    constructor (event) {\n        this.leftSweepEvent = event;\n        this.rightSweepEvent = event.otherEvent;\n    }\n}\n\nfunction testSegmentIntersect (seg1, seg2) {\n    if (seg1 === null || seg2 === null) return false\n\n    if (seg1.leftSweepEvent.ringId === seg2.leftSweepEvent.ringId &&\n        (seg1.rightSweepEvent.isSamePoint(seg2.leftSweepEvent) ||\n        seg1.rightSweepEvent.isSamePoint(seg2.leftSweepEvent) ||\n        seg1.rightSweepEvent.isSamePoint(seg2.rightSweepEvent) ||\n        seg1.leftSweepEvent.isSamePoint(seg2.leftSweepEvent) ||\n        seg1.leftSweepEvent.isSamePoint(seg2.rightSweepEvent))) return false\n\n    const x1 = seg1.leftSweepEvent.p.x;\n    const y1 = seg1.leftSweepEvent.p.y;\n    const x2 = seg1.rightSweepEvent.p.x;\n    const y2 = seg1.rightSweepEvent.p.y;\n    const x3 = seg2.leftSweepEvent.p.x;\n    const y3 = seg2.leftSweepEvent.p.y;\n    const x4 = seg2.rightSweepEvent.p.x;\n    const y4 = seg2.rightSweepEvent.p.y;\n\n    const denom = ((y4 - y3) * (x2 - x1)) - ((x4 - x3) * (y2 - y1));\n    const numeA = ((x4 - x3) * (y1 - y3)) - ((y4 - y3) * (x1 - x3));\n    const numeB = ((x2 - x1) * (y1 - y3)) - ((y2 - y1) * (x1 - x3));\n\n    if (denom === 0) {\n        if (numeA === 0 && numeB === 0) return false\n        return false\n    }\n\n    const uA = numeA / denom;\n    const uB = numeB / denom;\n\n    if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n        const x = x1 + (uA * (x2 - x1));\n        const y = y1 + (uA * (y2 - y1));\n        return [x, y]\n    }\n    return false\n}\n\n// import {debugEventAndSegments, debugRemovingSegment} from './debug'\n\nfunction runCheck (eventQueue, ignoreSelfIntersections) {\n    ignoreSelfIntersections = ignoreSelfIntersections ? ignoreSelfIntersections : false;\n\n    const intersectionPoints = [];\n    const outQueue = new TinyQueue([], checkWhichSegmentHasRightEndpointFirst);\n\n    while (eventQueue.length) {\n        const event = eventQueue.pop();\n        if (event.isLeftEndpoint) {\n            // debugEventAndSegments(event.p, outQueue.data)\n            const segment = new Segment(event);\n            for (let i = 0; i < outQueue.data.length; i++) {\n                const otherSeg = outQueue.data[i];\n                if (ignoreSelfIntersections) {\n                    if (otherSeg.leftSweepEvent.featureId === event.featureId) continue\n                }\n                const intersection = testSegmentIntersect(segment, otherSeg);\n                if (intersection !== false) intersectionPoints.push(intersection);\n            }\n            outQueue.push(segment);\n        } else if (event.isLeftEndpoint === false) {\n            outQueue.pop();\n            // const seg = outQueue.pop()\n            // debugRemovingSegment(event.p, seg)\n        }\n    }\n    return intersectionPoints\n}\n\nfunction sweeplineIntersections (geojson, ignoreSelfIntersections) {\n    const eventQueue = new TinyQueue([], checkWhichEventIsLeft);\n    fillEventQueue(geojson, eventQueue);\n    return runCheck(eventQueue, ignoreSelfIntersections)\n}\n\nexport default sweeplineIntersections;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// index.ts\nimport { bearing } from \"@turf/bearing\";\nimport { destination } from \"@turf/destination\";\nimport { distance } from \"@turf/distance\";\nfunction midpoint(point1, point2) {\n  const dist = distance(point1, point2);\n  const heading = bearing(point1, point2);\n  const midpoint2 = destination(point1, dist / 2, heading);\n  return midpoint2;\n}\nvar turf_midpoint_default = midpoint;\nexport { turf_midpoint_default as default, midpoint };","map":{"version":3,"names":["bearing","destination","distance","midpoint","point1","point2","dist","heading","midpoint2","turf_midpoint_default"],"sources":["/Users/yairtitelboim/Documents/Kernel/ALLAPPS/LOGhub/loghub/county-map-app/node_modules/@turf/midpoint/index.ts"],"sourcesContent":["import { Feature, Point } from \"geojson\";\nimport { bearing } from \"@turf/bearing\";\nimport { destination } from \"@turf/destination\";\nimport { distance } from \"@turf/distance\";\nimport { Coord } from \"@turf/helpers\";\n\n/**\n * Takes two points and returns a point midway between them. The midpoint is\n * calculated geodesically, meaning the curvature of the earth is taken into\n * account.\n *\n * @function\n * @param {Coord} point1 first point\n * @param {Coord} point2 second point\n * @returns {Feature<Point>} a point midway between `pt1` and `pt2`\n * @example\n * const point1 = turf.point([144.834823, -37.771257]);\n * const point2 = turf.point([145.14244, -37.830937]);\n *\n * const midpoint = turf.midpoint(point1, point2);\n *\n * //addToMap\n * const addToMap = [point1, point2, midpoint];\n * midpoint.properties['marker-color'] = '#f00';\n */\nfunction midpoint(point1: Coord, point2: Coord): Feature<Point> {\n  const dist = distance(point1, point2);\n  const heading = bearing(point1, point2);\n  const midpoint = destination(point1, dist / 2, heading);\n\n  return midpoint;\n}\n\nexport { midpoint };\nexport default midpoint;\n"],"mappings":";AACA,SAASA,OAAA,QAAe;AACxB,SAASC,WAAA,QAAmB;AAC5B,SAASC,QAAA,QAAgB;AAsBzB,SAASC,SAASC,MAAA,EAAeC,MAAA,EAA+B;EAC9D,MAAMC,IAAA,GAAOJ,QAAA,CAASE,MAAA,EAAQC,MAAM;EACpC,MAAME,OAAA,GAAUP,OAAA,CAAQI,MAAA,EAAQC,MAAM;EACtC,MAAMG,SAAA,GAAWP,WAAA,CAAYG,MAAA,EAAQE,IAAA,GAAO,GAAGC,OAAO;EAEtD,OAAOC,SAAA;AACT;AAGA,IAAOC,qBAAA,GAAQN,QAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
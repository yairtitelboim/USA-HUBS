{"ast":null,"code":"// index.ts\nimport { bbox } from \"@turf/bbox\";\nimport { point } from \"@turf/helpers\";\nfunction center(geojson, options = {}) {\n  const ext = bbox(geojson);\n  const x = (ext[0] + ext[2]) / 2;\n  const y = (ext[1] + ext[3]) / 2;\n  return point([x, y], options.properties, options);\n}\nvar turf_center_default = center;\nexport { center, turf_center_default as default };","map":{"version":3,"names":["bbox","point","center","geojson","options","ext","x","y","properties","turf_center_default"],"sources":["/Users/yairtitelboim/Documents/Kernel/ALLAPPS/LOGhub/loghub/county-map-app/node_modules/@turf/center/index.ts"],"sourcesContent":["import { BBox, Feature, GeoJsonProperties, Point } from \"geojson\";\nimport { bbox } from \"@turf/bbox\";\nimport { point, Id, AllGeoJSON } from \"@turf/helpers\";\n\n/**\n * Takes a {@link Feature} or {@link FeatureCollection} and returns the absolute center point of all features.\n *\n * @function\n * @param {GeoJSON} geojson GeoJSON to be centered\n * @param {Object} [options={}] Optional parameters\n * @param {Object} [options.properties={}] Translate GeoJSON Properties to Point\n * @param {Object} [options.bbox={}] Translate GeoJSON BBox to Point\n * @param {Object} [options.id={}] Translate GeoJSON Id to Point\n * @returns {Feature<Point>} a Point feature at the absolute center point of all input features\n * @example\n * var features = turf.points([\n *   [-97.522259, 35.4691],\n *   [-97.502754, 35.463455],\n *   [-97.508269, 35.463245]\n * ]);\n *\n * var center = turf.center(features);\n *\n * //addToMap\n * var addToMap = [features, center]\n * center.properties['marker-size'] = 'large';\n * center.properties['marker-color'] = '#000';\n */\nfunction center<P extends GeoJsonProperties = GeoJsonProperties>(\n  geojson: AllGeoJSON,\n  options: { properties?: P; bbox?: BBox; id?: Id } = {}\n): Feature<Point, P> {\n  const ext = bbox(geojson);\n  const x = (ext[0] + ext[2]) / 2;\n  const y = (ext[1] + ext[3]) / 2;\n  return point([x, y], options.properties, options);\n}\n\nexport { center };\nexport default center;\n"],"mappings":";AACA,SAASA,IAAA,QAAY;AACrB,SAASC,KAAA,QAA6B;AA0BtC,SAASC,OACPC,OAAA,EACAC,OAAA,GAAoD,CAAC,GAClC;EACnB,MAAMC,GAAA,GAAML,IAAA,CAAKG,OAAO;EACxB,MAAMG,CAAA,IAAKD,GAAA,CAAI,CAAC,IAAIA,GAAA,CAAI,CAAC,KAAK;EAC9B,MAAME,CAAA,IAAKF,GAAA,CAAI,CAAC,IAAIA,GAAA,CAAI,CAAC,KAAK;EAC9B,OAAOJ,KAAA,CAAM,CAACK,CAAA,EAAGC,CAAC,GAAGH,OAAA,CAAQI,UAAA,EAAYJ,OAAO;AAClD;AAGA,IAAOK,mBAAA,GAAQP,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
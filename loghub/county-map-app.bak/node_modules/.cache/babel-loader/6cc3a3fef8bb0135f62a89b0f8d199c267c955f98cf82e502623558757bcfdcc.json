{"ast":null,"code":"// index.ts\nimport { bbox as turfbbox } from \"@turf/bbox\";\nimport { booleanPointInPolygon } from \"@turf/boolean-point-in-polygon\";\n\n// lib/rbush-export.ts\nimport lib from \"rbush\";\nvar rbush = lib;\n\n// index.ts\nfunction collect(polygons, points, inProperty, outProperty) {\n  var rtree = new rbush(6);\n  var treeItems = points.features.map(function (item) {\n    var _a;\n    return {\n      minX: item.geometry.coordinates[0],\n      minY: item.geometry.coordinates[1],\n      maxX: item.geometry.coordinates[0],\n      maxY: item.geometry.coordinates[1],\n      property: (_a = item.properties) == null ? void 0 : _a[inProperty]\n    };\n  });\n  rtree.load(treeItems);\n  polygons.features.forEach(function (poly) {\n    if (!poly.properties) {\n      poly.properties = {};\n    }\n    var bbox = turfbbox(poly);\n    var potentialPoints = rtree.search({\n      minX: bbox[0],\n      minY: bbox[1],\n      maxX: bbox[2],\n      maxY: bbox[3]\n    });\n    var values = [];\n    potentialPoints.forEach(function (pt) {\n      if (booleanPointInPolygon([pt.minX, pt.minY], poly)) {\n        values.push(pt.property);\n      }\n    });\n    poly.properties[outProperty] = values;\n  });\n  return polygons;\n}\nvar turf_collect_default = collect;\nexport { collect, turf_collect_default as default };","map":{"version":3,"names":["bbox","turfbbox","booleanPointInPolygon","lib","rbush","collect","polygons","points","inProperty","outProperty","rtree","treeItems","features","map","item","_a","minX","geometry","coordinates","minY","maxX","maxY","property","properties","load","forEach","poly","potentialPoints","search","values","pt","push","turf_collect_default"],"sources":["/Users/yairtitelboim/Documents/Kernel/ALLAPPS/LOGhub/loghub/county-map-app/node_modules/@turf/collect/index.ts","/Users/yairtitelboim/Documents/Kernel/ALLAPPS/LOGhub/loghub/county-map-app/node_modules/@turf/collect/lib/rbush-export.ts"],"sourcesContent":["import { FeatureCollection, Polygon, Point } from \"geojson\";\nimport { bbox as turfbbox } from \"@turf/bbox\";\nimport { booleanPointInPolygon } from \"@turf/boolean-point-in-polygon\";\nimport { rbush } from \"./lib/rbush-export.js\";\n\ninterface Entry {\n  minX: number;\n  minY: number;\n  maxX: number;\n  maxY: number;\n  property: any;\n}\n\n/**\n * Merges a specified property from a FeatureCollection of points into a\n * FeatureCollection of polygons. Given an `inProperty` on points and an `outProperty`\n * for polygons, this finds every point that lies within each polygon, collects the\n * `inProperty` values from those points, and adds them as an array to `outProperty`\n * on the polygon.\n *\n * @function\n * @param {FeatureCollection<Polygon>} polygons polygons with values on which to aggregate\n * @param {FeatureCollection<Point>} points points to be aggregated\n * @param {string} inProperty property to be nested from\n * @param {string} outProperty property to be nested into\n * @returns {FeatureCollection<Polygon>} polygons with properties listed based on `outField`\n * @example\n * var poly1 = turf.polygon([[[0,0],[10,0],[10,10],[0,10],[0,0]]]);\n * var poly2 = turf.polygon([[[10,0],[20,10],[20,20],[20,0],[10,0]]]);\n * var polyFC = turf.featureCollection([poly1, poly2]);\n * var pt1 = turf.point([5,5], {population: 200});\n * var pt2 = turf.point([1,3], {population: 600});\n * var pt3 = turf.point([14,2], {population: 100});\n * var pt4 = turf.point([13,1], {population: 200});\n * var pt5 = turf.point([19,7], {population: 300});\n * var pointFC = turf.featureCollection([pt1, pt2, pt3, pt4, pt5]);\n * var collected = turf.collect(polyFC, pointFC, 'population', 'values');\n * var values = collected.features[0].properties.values\n * //=values => [200, 600]\n *\n * //addToMap\n * var addToMap = [pointFC, collected]\n */\nfunction collect(\n  polygons: FeatureCollection<Polygon>,\n  points: FeatureCollection<Point>,\n  inProperty: string,\n  outProperty: string\n): FeatureCollection<Polygon> {\n  var rtree = new rbush<Entry>(6);\n\n  var treeItems = points.features.map(function (item) {\n    return {\n      minX: item.geometry.coordinates[0],\n      minY: item.geometry.coordinates[1],\n      maxX: item.geometry.coordinates[0],\n      maxY: item.geometry.coordinates[1],\n      property: item.properties?.[inProperty],\n    };\n  });\n\n  rtree.load(treeItems);\n  polygons.features.forEach(function (poly) {\n    if (!poly.properties) {\n      poly.properties = {};\n    }\n    var bbox = turfbbox(poly);\n    var potentialPoints = rtree.search({\n      minX: bbox[0],\n      minY: bbox[1],\n      maxX: bbox[2],\n      maxY: bbox[3],\n    });\n    var values: any[] = [];\n    potentialPoints.forEach(function (pt) {\n      if (booleanPointInPolygon([pt.minX, pt.minY], poly)) {\n        values.push(pt.property);\n      }\n    });\n\n    poly.properties[outProperty] = values;\n  });\n\n  return polygons;\n}\n\nexport { collect };\nexport default collect;\n","// Get around problems with moduleResolution node16 and some older libraries.\n// Manifests as \"This expression is not callable ... has no call signatures\"\n// https://stackoverflow.com/a/74709714\n\nimport lib from \"rbush\";\n\nexport const rbush = lib as unknown as typeof lib.default;\n"],"mappings":";AACA,SAASA,IAAA,IAAQC,QAAA,QAAgB;AACjC,SAASC,qBAAA,QAA6B;;;ACEtC,OAAOC,GAAA,MAAS;AAET,IAAMC,KAAA,GAAQD,GAAA;;;ADqCrB,SAASE,QACPC,QAAA,EACAC,MAAA,EACAC,UAAA,EACAC,WAAA,EAC4B;EAC5B,IAAIC,KAAA,GAAQ,IAAIN,KAAA,CAAa,CAAC;EAE9B,IAAIO,SAAA,GAAYJ,MAAA,CAAOK,QAAA,CAASC,GAAA,CAAI,UAAUC,IAAA,EAAM;IAnDtD,IAAAC,EAAA;IAoDI,OAAO;MACLC,IAAA,EAAMF,IAAA,CAAKG,QAAA,CAASC,WAAA,CAAY,CAAC;MACjCC,IAAA,EAAML,IAAA,CAAKG,QAAA,CAASC,WAAA,CAAY,CAAC;MACjCE,IAAA,EAAMN,IAAA,CAAKG,QAAA,CAASC,WAAA,CAAY,CAAC;MACjCG,IAAA,EAAMP,IAAA,CAAKG,QAAA,CAASC,WAAA,CAAY,CAAC;MACjCI,QAAA,GAAUP,EAAA,GAAAD,IAAA,CAAKS,UAAA,KAAL,gBAAAR,EAAA,CAAkBP,UAAA;IAC9B;EACF,CAAC;EAEDE,KAAA,CAAMc,IAAA,CAAKb,SAAS;EACpBL,QAAA,CAASM,QAAA,CAASa,OAAA,CAAQ,UAAUC,IAAA,EAAM;IACxC,IAAI,CAACA,IAAA,CAAKH,UAAA,EAAY;MACpBG,IAAA,CAAKH,UAAA,GAAa,CAAC;IACrB;IACA,IAAIvB,IAAA,GAAOC,QAAA,CAASyB,IAAI;IACxB,IAAIC,eAAA,GAAkBjB,KAAA,CAAMkB,MAAA,CAAO;MACjCZ,IAAA,EAAMhB,IAAA,CAAK,CAAC;MACZmB,IAAA,EAAMnB,IAAA,CAAK,CAAC;MACZoB,IAAA,EAAMpB,IAAA,CAAK,CAAC;MACZqB,IAAA,EAAMrB,IAAA,CAAK,CAAC;IACd,CAAC;IACD,IAAI6B,MAAA,GAAgB,EAAC;IACrBF,eAAA,CAAgBF,OAAA,CAAQ,UAAUK,EAAA,EAAI;MACpC,IAAI5B,qBAAA,CAAsB,CAAC4B,EAAA,CAAGd,IAAA,EAAMc,EAAA,CAAGX,IAAI,GAAGO,IAAI,GAAG;QACnDG,MAAA,CAAOE,IAAA,CAAKD,EAAA,CAAGR,QAAQ;MACzB;IACF,CAAC;IAEDI,IAAA,CAAKH,UAAA,CAAWd,WAAW,IAAIoB,MAAA;EACjC,CAAC;EAED,OAAOvB,QAAA;AACT;AAGA,IAAO0B,oBAAA,GAAQ3B,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
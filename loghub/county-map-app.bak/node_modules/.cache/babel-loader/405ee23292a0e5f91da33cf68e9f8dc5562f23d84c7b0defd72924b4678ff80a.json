{"ast":null,"code":"// index.ts\nimport { coordEach } from \"@turf/meta\";\nimport { isObject } from \"@turf/helpers\";\nfunction truncate(geojson, options) {\n  options = options != null ? options : {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var precision = options.precision;\n  var coordinates = options.coordinates;\n  var mutate = options.mutate;\n  precision = precision === void 0 || precision === null || isNaN(precision) ? 6 : precision;\n  coordinates = coordinates === void 0 || coordinates === null || isNaN(coordinates) ? 3 : coordinates;\n  if (!geojson) throw new Error(\"<geojson> is required\");\n  if (typeof precision !== \"number\") throw new Error(\"<precision> must be a number\");\n  if (typeof coordinates !== \"number\") throw new Error(\"<coordinates> must be a number\");\n  if (mutate === false || mutate === void 0) geojson = JSON.parse(JSON.stringify(geojson));\n  var factor = Math.pow(10, precision);\n  coordEach(geojson, function (coords) {\n    truncateCoords(coords, factor, coordinates);\n  });\n  return geojson;\n}\nfunction truncateCoords(coords, factor, coordinates) {\n  if (coords.length > coordinates) coords.splice(coordinates, coords.length);\n  for (var i = 0; i < coords.length; i++) {\n    coords[i] = Math.round(coords[i] * factor) / factor;\n  }\n  return coords;\n}\nvar turf_truncate_default = truncate;\nexport { turf_truncate_default as default, truncate };","map":{"version":3,"names":["coordEach","isObject","truncate","geojson","options","Error","precision","coordinates","mutate","isNaN","JSON","parse","stringify","factor","Math","pow","coords","truncateCoords","length","splice","i","round","turf_truncate_default"],"sources":["/Users/yairtitelboim/Documents/Kernel/ALLAPPS/LOGhub/loghub/county-map-app/node_modules/@turf/truncate/index.ts"],"sourcesContent":["import { coordEach } from \"@turf/meta\";\nimport { AllGeoJSON, isObject } from \"@turf/helpers\";\n\n/**\n * Takes a GeoJSON Feature or FeatureCollection and truncates the precision of the geometry.\n *\n * @function\n * @param {GeoJSON} geojson any GeoJSON Feature, FeatureCollection, Geometry or GeometryCollection.\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.precision=6] coordinate decimal precision\n * @param {number} [options.coordinates=3] maximum number of coordinates (primarly used to remove z coordinates)\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} layer with truncated geometry\n * @example\n * var point = turf.point([\n *     70.46923055566859,\n *     58.11088890802906,\n *     1508\n * ]);\n * var options = {precision: 3, coordinates: 2};\n * var truncated = turf.truncate(point, options);\n * //=truncated.geometry.coordinates => [70.469, 58.111]\n *\n * //addToMap\n * var addToMap = [truncated];\n */\nfunction truncate<T extends AllGeoJSON>(\n  geojson: T,\n  options?: {\n    precision?: number;\n    coordinates?: number;\n    mutate?: boolean;\n  }\n): T {\n  // Optional parameters\n  options = options ?? {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var precision = options.precision;\n  var coordinates = options.coordinates;\n  var mutate = options.mutate;\n\n  // default params\n  precision =\n    precision === undefined || precision === null || isNaN(precision)\n      ? 6\n      : precision;\n  coordinates =\n    coordinates === undefined || coordinates === null || isNaN(coordinates)\n      ? 3\n      : coordinates;\n\n  // validation\n  if (!geojson) throw new Error(\"<geojson> is required\");\n  if (typeof precision !== \"number\")\n    throw new Error(\"<precision> must be a number\");\n  if (typeof coordinates !== \"number\")\n    throw new Error(\"<coordinates> must be a number\");\n\n  // prevent input mutation\n  if (mutate === false || mutate === undefined)\n    geojson = JSON.parse(JSON.stringify(geojson));\n\n  var factor = Math.pow(10, precision);\n\n  // Truncate Coordinates\n  coordEach(geojson, function (coords) {\n    truncateCoords(coords, factor, coordinates!);\n  });\n  return geojson;\n}\n\n/**\n * Truncate Coordinates - Mutates coordinates in place\n *\n * @private\n * @param {Array<any>} coords Geometry Coordinates\n * @param {number} factor rounding factor for coordinate decimal precision\n * @param {number} coordinates maximum number of coordinates (primarly used to remove z coordinates)\n * @returns {Array<any>} mutated coordinates\n */\nfunction truncateCoords(coords: number[], factor: number, coordinates: number) {\n  // Remove extra coordinates (usually elevation coordinates and more)\n  if (coords.length > coordinates) coords.splice(coordinates, coords.length);\n\n  // Truncate coordinate decimals\n  for (var i = 0; i < coords.length; i++) {\n    coords[i] = Math.round(coords[i] * factor) / factor;\n  }\n  return coords;\n}\n\nexport { truncate };\nexport default truncate;\n"],"mappings":";AAAA,SAASA,SAAA,QAAiB;AAC1B,SAAqBC,QAAA,QAAgB;AAyBrC,SAASC,SACPC,OAAA,EACAC,OAAA,EAKG;EAEHA,OAAA,GAAUA,OAAA,WAAAA,OAAA,GAAW,CAAC;EACtB,IAAI,CAACH,QAAA,CAASG,OAAO,GAAG,MAAM,IAAIC,KAAA,CAAM,oBAAoB;EAC5D,IAAIC,SAAA,GAAYF,OAAA,CAAQE,SAAA;EACxB,IAAIC,WAAA,GAAcH,OAAA,CAAQG,WAAA;EAC1B,IAAIC,MAAA,GAASJ,OAAA,CAAQI,MAAA;EAGrBF,SAAA,GACEA,SAAA,KAAc,UAAaA,SAAA,KAAc,QAAQG,KAAA,CAAMH,SAAS,IAC5D,IACAA,SAAA;EACNC,WAAA,GACEA,WAAA,KAAgB,UAAaA,WAAA,KAAgB,QAAQE,KAAA,CAAMF,WAAW,IAClE,IACAA,WAAA;EAGN,IAAI,CAACJ,OAAA,EAAS,MAAM,IAAIE,KAAA,CAAM,uBAAuB;EACrD,IAAI,OAAOC,SAAA,KAAc,UACvB,MAAM,IAAID,KAAA,CAAM,8BAA8B;EAChD,IAAI,OAAOE,WAAA,KAAgB,UACzB,MAAM,IAAIF,KAAA,CAAM,gCAAgC;EAGlD,IAAIG,MAAA,KAAW,SAASA,MAAA,KAAW,QACjCL,OAAA,GAAUO,IAAA,CAAKC,KAAA,CAAMD,IAAA,CAAKE,SAAA,CAAUT,OAAO,CAAC;EAE9C,IAAIU,MAAA,GAASC,IAAA,CAAKC,GAAA,CAAI,IAAIT,SAAS;EAGnCN,SAAA,CAAUG,OAAA,EAAS,UAAUa,MAAA,EAAQ;IACnCC,cAAA,CAAeD,MAAA,EAAQH,MAAA,EAAQN,WAAY;EAC7C,CAAC;EACD,OAAOJ,OAAA;AACT;AAWA,SAASc,eAAeD,MAAA,EAAkBH,MAAA,EAAgBN,WAAA,EAAqB;EAE7E,IAAIS,MAAA,CAAOE,MAAA,GAASX,WAAA,EAAaS,MAAA,CAAOG,MAAA,CAAOZ,WAAA,EAAaS,MAAA,CAAOE,MAAM;EAGzE,SAASE,CAAA,GAAI,GAAGA,CAAA,GAAIJ,MAAA,CAAOE,MAAA,EAAQE,CAAA,IAAK;IACtCJ,MAAA,CAAOI,CAAC,IAAIN,IAAA,CAAKO,KAAA,CAAML,MAAA,CAAOI,CAAC,IAAIP,MAAM,IAAIA,MAAA;EAC/C;EACA,OAAOG,MAAA;AACT;AAGA,IAAOM,qBAAA,GAAQpB,QAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
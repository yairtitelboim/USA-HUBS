{"ast":null,"code":"// index.ts\nimport { getCoords } from \"@turf/invariant\";\nfunction booleanClockwise(line) {\n  const ring = getCoords(line);\n  let sum = 0;\n  let i = 1;\n  let prev;\n  let cur;\n  while (i < ring.length) {\n    prev = cur || ring[0];\n    cur = ring[i];\n    sum += (cur[0] - prev[0]) * (cur[1] + prev[1]);\n    i++;\n  }\n  return sum > 0;\n}\nvar turf_boolean_clockwise_default = booleanClockwise;\nexport { booleanClockwise, turf_boolean_clockwise_default as default };","map":{"version":3,"names":["getCoords","booleanClockwise","line","ring","sum","i","prev","cur","length","turf_boolean_clockwise_default"],"sources":["/Users/yairtitelboim/Documents/Kernel/ALLAPPS/LOGhub/loghub/county-map-app/node_modules/@turf/boolean-clockwise/index.ts"],"sourcesContent":["import { Feature, LineString, Position } from \"geojson\";\nimport { getCoords } from \"@turf/invariant\";\n\n/**\n * Takes a ring and return true or false whether or not the ring is clockwise or counter-clockwise.\n *\n * @function\n * @param {Feature<LineString>|LineString|Array<Array<number>>} line to be evaluated\n * @returns {boolean} true/false\n * @example\n * var clockwiseRing = turf.lineString([[0,0],[1,1],[1,0],[0,0]]);\n * var counterClockwiseRing = turf.lineString([[0,0],[1,0],[1,1],[0,0]]);\n *\n * turf.booleanClockwise(clockwiseRing)\n * //=true\n * turf.booleanClockwise(counterClockwiseRing)\n * //=false\n */\nfunction booleanClockwise(\n  line: Feature<LineString> | LineString | Position[]\n): boolean {\n  const ring = getCoords(line);\n  let sum = 0;\n  let i = 1;\n  let prev;\n  let cur;\n\n  while (i < ring.length) {\n    prev = cur || ring[0];\n    cur = ring[i];\n    sum += (cur[0] - prev[0]) * (cur[1] + prev[1]);\n    i++;\n  }\n  return sum > 0;\n}\n\nexport { booleanClockwise };\nexport default booleanClockwise;\n"],"mappings":";AACA,SAASA,SAAA,QAAiB;AAiB1B,SAASC,iBACPC,IAAA,EACS;EACT,MAAMC,IAAA,GAAOH,SAAA,CAAUE,IAAI;EAC3B,IAAIE,GAAA,GAAM;EACV,IAAIC,CAAA,GAAI;EACR,IAAIC,IAAA;EACJ,IAAIC,GAAA;EAEJ,OAAOF,CAAA,GAAIF,IAAA,CAAKK,MAAA,EAAQ;IACtBF,IAAA,GAAOC,GAAA,IAAOJ,IAAA,CAAK,CAAC;IACpBI,GAAA,GAAMJ,IAAA,CAAKE,CAAC;IACZD,GAAA,KAAQG,GAAA,CAAI,CAAC,IAAID,IAAA,CAAK,CAAC,MAAMC,GAAA,CAAI,CAAC,IAAID,IAAA,CAAK,CAAC;IAC5CD,CAAA;EACF;EACA,OAAOD,GAAA,GAAM;AACf;AAGA,IAAOK,8BAAA,GAAQR,gBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}